getwd()
setwd("~/Dropbox/STAT862/Assign1")
Grocery <- read.table("Grocery.txt", header= F)
colnames(Grocery) <- c("Y","X1","X2","X3")
pairs(Grocery, main = "Figure 1. Pairwise scatter plots for dependent and independent variables.")
fit = lm(Y ~ X1 + X2 + X3,data=Grocery)
summary(fit)
anova(fit)
leaps=regsubsets(Y~X1+X2+X3, data=Grocery,nbest=10)
install.packages("leaps")
library(leaps)
install.packages("lasso2")
library(lasso2)
leaps=regsubsets(Y~X1+X2+X3, data=Grocery,nbest=10)
leaps=regsubsets(Y~., data=Grocery,nvmax=10)
pdf("bestsubset_leaps.pdf")
pdf("bestsubset_leaps.pdf")
par(mfrow=c(2,2))
plot(leaps,scale="r2")
plot(leaps,scale="adjr2")
plot(leaps,scale="Cp")
plot(leaps,scale="bic")
dev.off()
subset<-leaps(x=Grocery[,2:4],y=Grocery[,1])
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
subset<-leaps(x=Grocery[,2:4],y=Grocery[,1])
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
summary(leaps)
fit1<-lm(Y~X1+X2+X3,
data=Grocery)
fit1<-lm(Y~ .,data=Grocery)
fit0<-lm(Y~1,data=Grocery)
fit.forward<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='forward')
summary(fit.forward)
fit.backward<-step(fit1,scope=list(lower=Y~1, upper=Y~.),direction='backward')
summary(fit.backward)
fit.both<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='both')
summary(fit.both)
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,11), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,11), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,11), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,11))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
summary(leaps)
reg.summary=summary(leaps)
reg.summary$rss
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,11), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,11), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,11), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,11))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
fit1<-lm(Y~X1+X2+X3,
data=Grocery)
fit1<-lm(Y~ .,data=Grocery)
### null model
fit0<-lm(Y~1,data=Grocery)
### forward selection
fit.forward<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='forward')
summary(fit.forward)
### backward selection
fit.backward<-step(fit1,scope=list(lower=Y~1, upper=Y~.),direction='backward')
summary(fit.backward)
x1  = rnorm(30)
x2  = rnorm(30,mean=x1,sd=.01)
y   = rnorm(30,mean=5+x1+x2)
lm(y~x1+x2)$coef
lm.ridge(y~x1+x2,lambda=1)
# Grocery example
Grocery = scale(Grocery)
Grocery = as.data.frame(Grocery)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,20,0.1))
plot(fit.ridge)
select(fit.ridge)
round(fit.ridge$coef[, which(fit.ridge$lambda == 6.5)], 2)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=6.5)
fit.ridge$coef
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,20,0.1))
library(MASS)
x1  = rnorm(30)
x2  = rnorm(30,mean=x1,sd=.01)
y   = rnorm(30,mean=5+x1+x2)
lm(y~x1+x2)$coef
lm.ridge(y~x1+x2,lambda=1)
# Grocery example
Grocery = scale(Grocery)
Grocery = as.data.frame(Grocery)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,20,0.1))
plot(fit.ridge)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,100,0.1))
plot(fit.ridge)
Grocery = scale(Grocery)
Grocery = as.data.frame(Grocery)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,1000,0.1))
plot(fit.ridge)
Grocery = scale(Grocery)
Grocery = as.data.frame(Grocery)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,10000,0.1))
plot(fit.ridge)
select(fit.ridge)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,100000,1))
plot(fit.ridge)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,100000,1))
plot(fit.ridge)
? leaps
leaps=regsubsets(Y~X1+X2+X3, data=Grocery,nbest=10)
pdf("bestsubset_leaps.pdf")
par(mfrow=c(2,2))
plot(leaps,scale="r2")
plot(leaps,scale="adjr2")
plot(leaps,scale="Cp")
plot(leaps,scale="bic")
dev.off()
summary(leaps)
reg.summary=summary(leaps)
reg.summary$rss
reg.summary$cp
subset<-leaps(x=Grocery[,2:4],y=Grocery[,1])
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
reg.summary$adjr2
fit.forward<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='forward')
summary(fit.forward)
summary(fit.forward)
summary(fit.backward)
summary(fit.forward)
summary(fit.both)
summary(fit.backward)
anova(fit.backward)
anova(fit1,fit.backward)
anova(fit.backward, fit1, test = "F")
xnew = data.frame(X1 = 32000, X2 =7.5, X3= 1)
predict(fit.backward,xnew,se.fit = FALSE, interval = "prediction")
predict(fit.backward,xnew,se.fit = TRUE, interval = "confidence")
par(mfrow=c(2,2))
qqnorm(fit$res)
qqline(fit$res)
qqnorm(abs(fit$res))
qqline(abs(fit$res))
plot(fit$fitted,fit$res,xlab="Fitted values",ylab="Residuals")
plot(1:dim(Grocery)[1],fit$res,xlab="Runs",ylab="Residuals")
View(xnew)
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
subset$size
subset$Cp
summary(leaps)
reg.summary$rss
reg.summary$rsq
reg.summary$adjr2
reg.summary$cp
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,11), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,3), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,3), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,3), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,3), ylim=c(0,1))
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,3))
fit.forward<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='forward')
summary(fit.forward)
fit.backward<-step(fit1,scope=list(lower=Y~1, upper=Y~.),direction='backward')
summary(fit.backward)
fit.both<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='both')
summary(fit.both)
anova(fit.backward, fit1, test = "F")
anova(fit.backward, fit1)
fit3<-lm(Y~X1+X3, data=Grocery)
anova(fit3, fit1)
install.packages("lasso2")
library(lasso2)
data(Prostate)
attach(Prostate)
install.packages("lasso2")
pairs(cbind(lpsa,lcavol,lweight,age,lbph,svi,lcp,gleason))
install.packages("lasso2")
library(lasso2)
data(Prostate)
attach(Prostate)
pairs(cbind(lpsa,lcavol,lweight,age,lbph,svi,lcp,gleason))
fit = lm(lpsa~lcavol+lweight+age+lbph+svi+lcp+gleason,data=Prostate)
fit2 = lm(lpsa~lcavol+lweight+lbph+svi,data=Prostate)
anova(fit2,fit)
fit1<-lm(Y~ .,data=Grocery)
install.packages("leaps")
library(leaps)
install.packages("lasso2")
install.packages("lasso2")
library(lasso2)
library(leaps)
Grocery <- read.table("Grocery.txt", header= F)
colnames(Grocery) <- c("Y","X1","X2","X3")
pairs(Grocery, main = "Figure 1. Pairwise scatter plots for dependent and independent variables.")
fit = lm(Y ~ X1 + X2 + X3,data=Grocery)
fit3<-lm(Y~X1+X3, data=Grocery)
anova(fit1, fit3)
anova(fit, fit3)
anova(fit3, fit)
fit4<-lm(Y~1, data = Grocery)
anova(fit4, fit)
fit4<-lm(Y~X1, data = Grocery)
anova(fit4, fit)
fit4<-lm(Y~X1+X2+X3, data = Grocery)
anova(fit4, fit)
fit4<-lm(Y~X1+X2+X3+1, data = Grocery)
anova(fit4, fit)
fit4<-lm(Y~X1+X2, data = Grocery)
anova(fit4, fit)
anova(fit3, fit)
install.packages("xtable")
library(xtable)
library(lasso2)
library(leaps)
Grocery <- read.table("Grocery.txt", header= F)
colnames(Grocery) <- c("Y","X1","X2","X3")
pairs(Grocery, main = "")
fit = lm(Y ~ X1 + X2 + X3,data=Grocery)
xtable(fit)
summary(fit)
xtable(summary(fit))
xtable(anova(fit))
leaps=regsubsets(Y~X1+X2+X3, data=Grocery,nbest=10)
pdf("bestsubset_leaps.pdf")
par(mfrow=c(2,2))
plot(leaps,scale="r2")
plot(leaps,scale="adjr2")
plot(leaps,scale="Cp")
plot(leaps,scale="bic")
dev.off()
pdf("bestsubset_plot.pdf")
subset<-leaps(x=Grocery[,2:4],y=Grocery[,1])
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
dev.off()
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,3), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,3), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,3), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,3))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
summary(leaps)
reg.summary=summary(leaps)
### the residual sum of squares of the top 10 models
reg.summary$rss
### the R^2 of the top 10 models
reg.summary$rsq
### the adjusted R^2 of the top 10 models
reg.summary$adjr2
### the Cp of the top 10 models
reg.summary$cp
#  plot of RSS, adjusted R^2, Cp and BIC together
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,3), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,3), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,3), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,3))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
fit.forward<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='forward')
summary(fit.forward)
### full model
fit1<-lm(Y~X1+X2+X3,
data=Grocery)
fit1<-lm(Y~ .,data=Grocery)
### null model
fit0<-lm(Y~1,data=Grocery)
### forward selection
fit.forward<-step(fit0,scope=list(lower=Y~1, upper=Y~.),direction='forward')
summary(fit.forward)
xtable(fit.forward)
xtable(anova(fit.forward))
fit.backward<-step(fit1,scope=list(lower=Y~1, upper=Y~.),direction='backward')
summary(fit.backward)
xtable(fit.backward)
xtable(anova(fit.backward))
fit3<-lm(Y~X1+X3, data=Grocery)
anova(fit3, fit)
xtable(anova(fit3, fit))
xnew = data.frame(X1 = 32000, X2 =7.5, X3= 1)
predict(fit3,xnew,se.fit = FALSE, interval = "prediction")
predict(fit3,xnew,se.fit = TRUE, interval = "confidence")
new<- predict(fit3,xnew,se.fit = TRUE, interval = "confidence")
xtable(new)
predict(fit3,xnew,se.fit = TRUE, interval = "confidence")
predict(fit3,xnew,se.fit = TRUE)
predict(fit3,xnew,se.fit = TRUE, interval = "prediction")
predict(fit3,xnew,se.fit = TRUE, interval = "confidence")
predict(fit3,xnew,se.fit = FALSE, interval = "prediction")
predict(fit3,xnew,se.fit = TRUE, interval = "confidence")
predict(fit3,xnew,se.fit = TRUE, interval = "confidence")
xtable(predict())
xtable(predict
xtable(predict)
help lm
? lm
? lm
? summary
summary.lm(fit)
Grocery = scale(Grocery)
Grocery = as.data.frame(Grocery)
fit.ridge<-lm.ridge(Y~X1+X2+X3,
data=Grocery, lambda=seq(0,100000,1))
plot(fit.ridge)
fit.ridge<-lm.ridge(Y~X1+X2+X3, data=Grocery, lambda=seq(0,100000,1))
library(MASS)
x1  = rnorm(30)
x2  = rnorm(30,mean=x1,sd=.01)
y   = rnorm(30,mean=5+x1+x2)
lm(y~x1+x2)$coef
lm.ridge(y~x1+x2,lambda=1)
fit.ridge<-lm.ridge(Y~X1+X2+X3, data=Grocery, lambda=seq(0,100000,1))
plot(fit.ridge)
fit.ridge<-lm.ridge(Y~X1+X2+X3, data=Grocery, lambda=seq(0,100,1))
plot(fit.ridge)
fit.ridge<-lm.ridge(Y~X1+X2+X3, data=Grocery, lambda=seq(0,200,1))
plot(fit.ridge)
fit.ridge<-lm.ridge(Y~X1+X2+X3, data=Grocery, lambda=seq(0,500,1))
plot(fit.ridge)
plot(seq(0,500,1),fit.ridge$GCV,xlab= expression(lambda),ylab="GCV")
install.packages("glmnet")
library(glmnet)
X = as.matrix(Grocery[,2:4])
y = Grocery[,1]
fit = glmnet(X,y,lambda.min=0,nlambda=501)
plot(fit)
fit = glmnet(X,y,lambda.min=0,nlambda=501)
plot(fit)
cvfit = cv.glmnet(X,y,lambda.min=0,nlambda=501)
plot(cvfit)
coef(fit,s=cvfit$lambda.min)
min(cvfit$cvm)
data(Prostate)
attach(Prostate)
pairs(cbind(lpsa,lcavol,lweight,age,lbph,svi,lcp,gleason))
fit = lm(lpsa~lcavol+lweight+age+lbph+svi+lcp+gleason,data=Prostate)
summary(fit)
anova(fit)
xnew= data.frame(lcavol = -1, lweight = 2.5, age =50,
lbph= 1.4, svi = 0,lcp= -1.3,gleason = 7)
predict(fit,xnew,se.fit = FALSE, interval = "prediction")
predict(fit,xnew,se.fit = TRUE, interval = "confidence")
0.3433294-0.9461208
par(mfrow=c(2,2))
qqnorm(fit$res)
qqline(fit$res)
qqnorm(abs(fit$res))
qqline(abs(fit$res))
plot(fit$fitted,fit$res,xlab="Fitted values",ylab="Residuals")
plot(1:dim(Prostate)[1],fit$res,xlab="Runs",ylab="Residuals")
fit2 = lm(lpsa~lcavol+lweight+lbph+svi,data=Prostate)
anova(fit2,fit)
detach(Prostate)
setwd("~/Dropbox/STAT862/Unit3b")
data(Prostate)
attach(Prostate)
library(leaps)
library(lasso2)
leaps=regsubsets(lpsa~lcavol+lweight+age
+lbph+svi+lcp+gleason+pgg45, data=Prostate,nbest=10)
leaps=regsubsets(lpsa~., data=Prostate,nvmax=10)
pdf("bestsubset_leaps.pdf")
par(mfrow=c(2,2))
plot(leaps,scale="r2")
plot(leaps,scale="adjr2")
plot(leaps,scale="Cp")
plot(leaps,scale="bic")
dev.off()
subset<-leaps(x=Prostate[,1:8],y=Prostate[,9])
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
summary(leaps)
reg.summary=summary(leaps)
reg.summary$rss
reg.summary$rsq
reg.summary$adjr2
reg.summary$cp
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,11), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,11), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,11), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,11))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
fit1<-lm(lpsa~ .,data=Prostate)
fit0<-lm(lpsa~1,data=Prostate)
fit.forward<-step(fit0,scope=list(lower=lpsa~1, upper=fit1),direction='forward')
summary(fit.forward)
fit.backward<-step(fit1,scope=list(lower=lpsa~1, upper=fit1),direction='backward')
summary(fit.backward)
fit.both<-step(fit0,scope=list(lower=lpsa~1, upper=fit1),direction='both')
summary(fit.both)
library(MASS)
x1  = rnorm(30)
x2  = rnorm(30,mean=x1,sd=.01)
y   = rnorm(30,mean=5+x1+x2)
lm(y~x1+x2)$coef
lm.ridge(y~x1+x2,lambda=1)
prostate = scale(Prostate)
prostate = as.data.frame(prostate)
fit.ridge<-lm.ridge(lpsa~lcavol+lweight+age
+lbph+svi+lcp+gleason+pgg45,
data=prostate, lambda=seq(0,20,0.1))
plot(fit.ridge)
plot(seq(0,20,0.1),fit.ridge$GCV,xlab= expression(lambda),ylab="GCV")
select(fit.ridge)
round(fit.ridge$coef[, which(fit.ridge$lambda == 6.5)], 2)
fit.ridge<-lm.ridge(lpsa~lcavol+lweight+age
+lbph+svi+lcp+gleason+pgg45,
data=prostate, lambda=6.5)
fit.ridge$coef
install.packages("glmnet")
library(glmnet)
X = as.matrix(Prostate[,1:8])
y = Prostate$lpsa
fit = glmnet(X,y)
plot(fit)
cvfit = cv.glmnet(X,y)
plot(cvfit)
coef(fit,s=cvfit$lambda.min)
min(cvfit$cvm)
? "glmnet"
install.packages("lars")
library(lars)
fit.lars = lars(X,y, type="lasso",trace=TRUE)
plot(fit.lars)
plot(fit.lars)
cv.fit.lars = cv.lars(X,y)
bestindex = cv.fit.lars$index[which.min(cv.fit.lars$cv)]
which.min(cv.fit.lars$cv)
fit.lars$beta
bestindex
fit.lars$lambda
fit.lars$beta[6,]
