}
fsample(2,5^0.5,10,1000,0.05)
fsample(2,5^0.5,10,1000,0.05)
fsample(2,5^0.5,10,1000,0.05)
fsample(2,5^0.5,10,1000,0.025)
fsample(2,5^0.5,100,1000,0.05)
fsample(2,5^0.5,100,1000,0.025)
fsample(2,5^0.5,10,1000,0.05)
? sd
? se
fsample(2,5^0.5,10,1000,0.05)
fsample(2,5^0.5,10,1000,0.025)
fsample(2,5^0.5,100,1000,0.05)
fsample(2,5^0.5,100,1000,0.025)
fbeta <- function (n, alpha, beta)
{
x1 <- rgamma(n ,shape = alpha, scale = 1)
x2 <- rgamma(n ,shape = beta, scale = 1)
x<- x1/(x1+x2)
x0 <- rbeta(n, alpha, beta, ncp = 0)
# return(x)
par(mfrow=c(2,2))
hist(x);qqnorm(x);qqline(x);
hist(x0);qqnorm(x0);qqline(x0);
}
fbeta(10000, 2, 3)
fbeta(10000, 2, 2)
library("truncnorm")
alpha = 2
beta = 2
X = seq(0,1,0.01)
c = max(dbeta(X, alpha, beta)/dtruncnorm(X))
cc = max(dbeta(X, alpha, beta)/dunif(X))
alpha = 2
beta = 2
X = seq(0,1,0.01)
c = max(dbeta(X, alpha, beta)/dtruncnorm(X))
cc = max(dbeta(X, alpha, beta)/dunif(X))
x = NULL
n = 10000
for(i in 1: (100*c))
{
u = runif(1)
y = rtruncnorm(1, a= 0, b= 1, mean = 1, sd = 2)
if( u <=  dbeta(y, alpha, beta)/(dtruncnorm(y, a = 0, b = 1, mean = 0, sd =1)*c))
{ x = c(x,y)}
}
N = 10000
u = runif(N)
y = rtruncnorm(N, a= 0, b= 1, mean = 0, sd = 1)
accept = (dbeta(y, alpha, beta)/(dtruncnorm(y, a = 0, b = 1, mean = 0, sd = 1)*c))
# accept2 = (dbeta(y, alpha, beta)/(dunif(y)*cc))
x = y[accept]
x
mean(accept)
1/c
x = NULL
n = 10000
xx = NULL
for(i in 1: (100*c))
{
u = runif(1)
yy = runif(1)
if( u <=  dbeta(y, alpha, beta)/(dunif(y)*c))
{ xx = c(xx,yy)}
}
yy = runif(N)
accept2 = (dbeta(yy, alpha, beta)/(dunif(yy)*cc))
mean(accept2)
1/cc
par(mfrow=c(2,2))
hist(x);qqnorm(x);qqline(x);
x0 = rbeta(n, alpha, beta)
hist(x0);qqnorm(x0);qqline(x0)
x = y[accept]
par(mfrow=c(2,2))
hist(x);qqnorm(x);qqline(x);
x0 = rbeta(n, alpha, beta)
hist(x0);qqnorm(x0);qqline(x0)
hist(x);qqnorm(x);qqline(x);
x
for(i in 1: (100*c))
{
u = runif(1)
y = rtruncnorm(1, a= 0, b= 1, mean = 1, sd = 2)
if( u <=  dbeta(y, alpha, beta)/(dtruncnorm(y, a = 0, b = 1, mean = 0, sd =1)*c))
{ x = c(x,y)}
}
hist(x);qqnorm(x);qqline(x);
for(i in 1: (10000*c))
{
u = runif(1)
y = rtruncnorm(1, a= 0, b= 1, mean = 1, sd = 2)
if( u <=  dbeta(y, alpha, beta)/(dtruncnorm(y, a = 0, b = 1, mean = 0, sd =1)*c))
{ x = c(x,y)}
}
par(mfrow=c(2,2))
hist(x);qqnorm(x);qqline(x);
x0 = rbeta(n, alpha, beta)
hist(x0);qqnorm(x0);qqline(x0)
for(i in 1: (10000*c))
{
u = runif(1)
yy = runif(1)
if( u <=  dbeta(y, alpha, beta)/(dunif(y)*c))
{ xx = c(xx,yy)}
}
par(mfrow=c(2,2))
hist(xx);qqnorm(xx);qqline(xx);
x0 = rbeta(n, alpha, beta)
hist(x0);qqnorm(x0);qqline(x0)
for(i in 1: (10000*c))
{
u = runif(1)
yy = runif(1)
if( u <=  dbeta(y, alpha, beta)/(dunif(y)*c))
{ xx = c(xx,yy)}
}
for(i in 1: (10000*c))
{
u = runif(1)
yy = runif(1)
if( u <=  dbeta(yy, alpha, beta)/(dunif(yy)*c))
{ xx = c(xx,yy)}
}
par(mfrow=c(2,2))
hist(xx);qqnorm(xx);qqline(xx);
x0 = rbeta(n, alpha, beta)
hist(x0);qqnorm(x0);qqline(x0)
for(i in 1: (100000*c))
{
u = runif(1)
yy = runif(1)
if( u <=  dbeta(yy, alpha, beta)/(dunif(yy)*c))
{xx = c(xx,yy)}
}
for(i in 1: (10000*c))
{
u = runif(1)
yy = runif(1)
if( u <=  dbeta(yy, alpha, beta)/(dunif(yy)*c))
{xx = c(xx,yy)}
}
par(mfrow=c(2,2))
hist(xx);qqnorm(xx);qqline(xx);
x0 = rbeta(n, alpha, beta)
hist(x0);qqnorm(x0);qqline(x0)
integral = function (n5){
x5 = rexp(n5, rate = 0.5)
# evaluate the mean with different n, show the figure of mean vs n
hx = 2 * (sin(x5)^2)*exp(-x5^0.5)
theta = mean(hx)
return (theta)
}
integral(10000)
XX = NULL
YY = NULL
ZZ = NULL
for(i in 2: 10000) {
YY = cbind(YY, integral(i))
XX = cbind(XX, i)
ZZ = cbind(ZZ, integral(i)-integral(i-1))
}
plot(XX, YY, xlab = "n", ylab = "theta")
plot(XX, YY, xlab = "n", ylab = "theta")
integrand <- function(x) {exp(-(x^0.5 + 0.5*x))*(sin(x))^2}
integrate(integrand, lower = 0, upper = Inf)
imp<-function(M) # M is sample size
{
# the range of x should be from zero to infinity
set.seed(9999)
X1 = rlaplace(M, 1)
X2 = rcauchy(M, location = 0, scale = 2)
X3 = rnorm(M)
X1 = X1*(X1>0); X2 = X2*(X2>0); X3 = X3*(X3>0)
#X3 = rtruncnorm(M, a= 0, b= Inf, mean = 0, sd = 1)
wgx1 = function (x)
{
2*(sin(x))^2 * exp (-x^0.5 - 0.5*x + abs(x))
}
wgx2 = function (x)
{
2*pi*(1+(x^2/4))* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
wgx3 = function (x)
{
(2*pi)^0.5 * exp(x^2/2)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS3 = mean((wgx3(X3)), na.rm=TRUE)
IS2 = mean((wgx2(X2)), na.rm=TRUE)
IS1 = mean((wgx2(X1)), na.rm=TRUE)
standev1=sd((wgx1(X1))/sqrt(M), na.rm=TRUE)
c1 = (c(IS1,standev1,IS1-qnorm(0.975)*standev1,IS1+qnorm(0.975)*standev1))
standev2=sd((wgx2(X2))/sqrt(M), na.rm=TRUE)
c2 = (c(IS2,standev2,IS2-qnorm(0.975)*standev2,IS2+qnorm(0.975)*standev2))
standev3=sd((wgx3(X3))/sqrt(M), na.rm=TRUE)
c3 = (c(IS3,standev3,IS3-qnorm(0.975)*standev3,IS3+qnorm(0.975)*standev3))
return(rbind(c1,c2,c3))
}
imp(100)
imp(500)
imp(1000)
imp(2000)
library("OOmisc")
install.packages("OOmisc")
imp<-function(M) # M is sample size
library("OOmisc")
imp<-function(M) # M is sample size
{
# the range of x should be from zero to infinity
set.seed(9999)
X1 = rlaplace(M, 1)
X2 = rcauchy(M, location = 0, scale = 2)
X3 = rnorm(M)
X1 = X1*(X1>0); X2 = X2*(X2>0); X3 = X3*(X3>0)
#X3 = rtruncnorm(M, a= 0, b= Inf, mean = 0, sd = 1)
wgx1 = function (x)
{
2*(sin(x))^2 * exp (-x^0.5 - 0.5*x + abs(x))
}
wgx2 = function (x)
{
2*pi*(1+(x^2/4))* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
wgx3 = function (x)
{
(2*pi)^0.5 * exp(x^2/2)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS3 = mean((wgx3(X3)), na.rm=TRUE)
IS2 = mean((wgx2(X2)), na.rm=TRUE)
IS1 = mean((wgx2(X1)), na.rm=TRUE)
standev1=sd((wgx1(X1))/sqrt(M), na.rm=TRUE)
c1 = (c(IS1,standev1,IS1-qnorm(0.975)*standev1,IS1+qnorm(0.975)*standev1))
standev2=sd((wgx2(X2))/sqrt(M), na.rm=TRUE)
c2 = (c(IS2,standev2,IS2-qnorm(0.975)*standev2,IS2+qnorm(0.975)*standev2))
standev3=sd((wgx3(X3))/sqrt(M), na.rm=TRUE)
c3 = (c(IS3,standev3,IS3-qnorm(0.975)*standev3,IS3+qnorm(0.975)*standev3))
return(rbind(c1,c2,c3))
}
imp(100)
library("OOmisc")
imp<-function(M) # M is sample size
{
# the range of x should be from zero to infinity
set.seed(9999)
X1 = rlaplace(M, 1)
X2 = rcauchy(M, location = 0, scale = 2)
X3 = rnorm(M)
X1 = X1*(X1>0); X2 = X2*(X2>0); X3 = X3*(X3>0)
#X3 = rtruncnorm(M, a= 0, b= Inf, mean = 0, sd = 1)
wgx1 = function (x)
{
2*(sin(x))^2 * exp (-x^0.5 - 0.5*x + abs(x))
}
wgx2 = function (x)
{
2*pi*(1+(x^2/4))* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
wgx3 = function (x)
{
(2*pi)^0.5 * exp(x^2/2)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS3 = mean((wgx3(X3)), na.rm=TRUE)
IS2 = mean((wgx2(X2)), na.rm=TRUE)
IS1 = mean((wgx2(X1)), na.rm=TRUE)
standev1=sd((wgx1(X1))/sqrt(M), na.rm=TRUE)
c1 = (c(IS1,standev1,IS1-qnorm(0.975)*standev1,IS1+qnorm(0.975)*standev1))
standev2=sd((wgx2(X2))/sqrt(M), na.rm=TRUE)
c2 = (c(IS2,standev2,IS2-qnorm(0.975)*standev2,IS2+qnorm(0.975)*standev2))
standev3=sd((wgx3(X3))/sqrt(M), na.rm=TRUE)
c3 = (c(IS3,standev3,IS3-qnorm(0.975)*standev3,IS3+qnorm(0.975)*standev3))
return(rbind(c1,c2,c3))
}
imp(100)
imp(500)
imp(1000)
imp(2000)
wgx4 = function (x)
{
(2*pi)^0.5 * (exp (x-(pi/2))^2/2)+ exp (x-(3*pi/2))^2/2) + exp (x-(5*pi/2))^2/2) )* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2) + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
M = 1000
? rnorm
X4 = rnorm(M, pi/2) + rnorm(M, 3*pi/2) + rnorm(M, 5*pi/2)
IS4 = mean((wgx4(X4)), na.rm=TRUE)
IS3 = mean((wgx3(X3)), na.rm=TRUE)
IS4 = mean((wgx4(X4/3)), na.rm=TRUE)
IS4 = mean((wgx4(X4)), na.rm=TRUE)
wgx4 = function (x)
{
(2*pi)^0.5/3 *
(
exp ((x-(pi/2))^2/2) + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
wgx4 = function (x)
{
(2*pi)^0.5/2 *
(
exp ((x-(pi/2))^2/2) + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
wgx4 = function (x)
{
(2*pi)^0.5/4 *
(
exp ((x-(pi/2))^2/2) + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2) + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
X4 = rnorm(M, pi/2)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2) + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
wgx4 = function (x)
{
# + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2) )
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
wgx4 = function (x)
{
# + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
M = 2000
wgx4 = function (x)
{
# + exp ((x-(3*pi/2))^2/2) + exp ((x-(5*pi/2))^2/2)
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
X4 = rnorm(M, pi/2) + rnorm(M, pi/2) + rnorm(M, pi/2)
IS4 = mean((wgx4(X4)), na.rm=TRUE)
N <- 100000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
X4 <- sqrt(c(1,1,1))
samples <- rnorm(n=N,mean=mus[components],sd=sds[components])
install.packages("matrixStats")
library("matrixStats")
N <- 100000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
X4 <- sqrt(c(1,1,1))
samples <- rnorm(n=N,mean=mus[components],sd=sds[components])
N <- 100000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
sds <- sqrt(c(1,1,1))
X4 <- rnorm(n=N,mean=mus[components],sd=sds[components])
wgx4 = function (x)
{
(2*pi)^0.5 *
(
0.5* exp ((x-(pi/2))^2/2) + 0.3*exp ((x-(3*pi/2))^2/2) + 0.2* exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
N <- 100000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
sds <- sqrt(c(1,1,1))
X4 <- rnorm(n=N,mean=mus[components],sd=sds[components])
N <- 10000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
sds <- sqrt(c(1,1,1))
X4 <- rnorm(n=N,mean=mus[components],sd=sds[components])
wgx4 = function (x)
{
(2*pi)^0.5 *
(
0.5* exp ((x-(pi/2))^2/2) + 0.3*exp ((x-(3*pi/2))^2/2) + 0.2* exp ((x-(5*pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
X4 <- rnorm(n=N,mean=mus[components],sd=sds[components])
X4 = X4*(X4>0)
IS4 = mean((wgx4(X4)), na.rm=TRUE)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
0.5* exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
X4 = rnorm(M, pi/2)
X4 = X4*(X4>0)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
0.5* exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
IS4 = mean((wgx4(X4)), na.rm=TRUE)
IS3 = mean((wgx4(X4)), na.rm=TRUE)
standev3=sd((wgx3(X3))/sqrt(M), na.rm=TRUE)
c3 = (c(IS3,standev3,IS3-qnorm(0.975)*standev3,IS3+qnorm(0.975)*standev3))
IS4 = mean((wgx4(X4)), na.rm=TRUE)
standev4=sd((wgx4(X4))/sqrt(M), na.rm=TRUE)
c3 = (c(IS4,standev4,IS4-qnorm(0.975)*standev4,IS4+qnorm(0.975)*standev4))
c3
M = 100
N <- 2000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
sds <- sqrt(c(1,1,1))
X4 <- rnorm(n=N,mean=mus[components],sd=sds[components])
X4 = X4*(X4>0)
X1 = X1*(X1>0); X2 = X2*(X2>0); X3 = X3*(X3>0)
N <- 2000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
sds <- sqrt(c(1,1,1))
X4 <- rnorm(n=N,mean=mus[components],sd=sds[components])
X4 = X4*(X4>0)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
standev4=sd((wgx4(X4))/sqrt(M), na.rm=TRUE)
c4 = (c(IS4,standev4,IS4-qnorm(0.975)*standev4,IS4+qnorm(0.975)*standev4))
c4
N <- 200000
components <- sample(1:3,prob=c(0.5,0.3,0.2),size=N,replace=TRUE)
mus <- c(pi/2,3*pi/2,5*pi/2)
sds <- sqrt(c(1,1,1))
X4 <- rnorm(n=N,mean=mus[components],sd=sds[components])
X4 = X4*(X4>0)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
standev4=sd((wgx4(X4))/sqrt(M), na.rm=TRUE)
c4 = (c(IS4,standev4,IS4-qnorm(0.975)*standev4,IS4+qnorm(0.975)*standev4))
c4
# the range of x should be from zero to infinity
M = 2000
X4 = rnorm(M, pi/2)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
standev4=sd((wgx4(X4))/sqrt(M), na.rm=TRUE)
c4 = (c(IS4,standev4,IS4-qnorm(0.975)*standev4,IS4+qnorm(0.975)*standev4))
c4
M = 200000
X4 = rnorm(M, pi/2)
X4 = X4*(X4>0)
wgx4 = function (x)
{
(2*pi)^0.5 *
(
exp ((x-(pi/2))^2/2)
)* (sin(x))^2 * exp (-x^0.5 - 0.5*x)
}
IS4 = mean((wgx4(X4)), na.rm=TRUE)
standev4=sd((wgx4(X4))/sqrt(M), na.rm=TRUE)
c4 = (c(IS4,standev4,IS4-qnorm(0.975)*standev4,IS4+qnorm(0.975)*standev4))
c4
