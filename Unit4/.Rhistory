knots=quantile(x,c(1/3,2/3))
fit = lm(y~ns(x,knots=knots))
x0 = seq(min(x),max(x),len=300)
llines(x0,predict(fit,data.frame(x=x0)),col="black")
lsegments(x0=min(x),y0=min(y),x1=min(x),y1=max(y),col="black",lty=2)
lsegments(x0=knots[1],y0=min(y),x1=knots[1],y1=max(y),col="black",lty=2)
lsegments(x0=knots[2],y0=min(y),x1=knots[2],y1=max(y),col="black",lty=2)
lsegments(x0=max(x),y0=min(y),x1=max(x),y1=max(y),col="black",lty=2)
}
xyplot(y~x, panel= myPanel)
panel.smooth <- function(x,y,...)
{
fit = lm(y~ns(x,df=5))
x0 = seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
#lpolygon(c(x0,rev(x0)),c(y0$fit-2*y0$se.fit,rev(y0$fit+2*y0$se.fit)),col="gray",border=F,...)
llines(x0,y0$fit,col="black")
}
xyplot(y~x,panel=myPanel)
fit1 <- lm(y ~ x + I(x^2))
knots=quantile(x,c(1/3,2/3))
fit2 = lm(y~bs(x,knots=knots,degree=3))
fit3 = lm(y~ns(x,knots=knots))
fit4 <- smooth.spline(x, y,df=12)
x0 <- seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
fit1 <- lm(y ~ x + I(x^2))
x0 <- seq(min(x),max(x),len=300)
y0 = predict(fit1,newdata=data.frame(x=x0),se.fit=T)
xyplot(y~x)
var <- (y0$se.fit)^2
plot(x0, var, xlab = "x", ylab = "variance")
y0 = predict(fit2,newdata=data.frame(x=x0),se.fit=T)
var <- (y0$se.fit)^2
plot(x0, var, xlab = "x", ylab = "variance")
fit1 <- lm(y ~ x + I(x^2))
knots=quantile(x,c(1/3,2/3))
fit2 = lm(y~bs(x,knots=knots,degree=3))
fit3 = lm(y~ns(x,knots=knots))
fit4 <- smooth.spline(x, y,df=12)
x0 <- seq(min(x),max(x),len=300)
y01 = predict(fit1,newdata=data.frame(x=x0),se.fit=T)
y02 = predict(fit2,newdata=data.frame(x=x0),se.fit=T)
y03 = predict(fit3,newdata=data.frame(x=x0),se.fit=T)
y04 = predict(fit4,newdata=data.frame(x=x0),se.fit=T)
var1 <- (y01$se.fit)^2
var2 <- (y02$se.fit)^2
var3 <- (y03$se.fit)^2
var4 <- (y04$se.fit)^2
plot(x0, var1, xlab = "x", ylab = "variance")
par(new=T)
plot(x0, var2, xlab = "x", ylab = "variance")
par(new=F)
plot(x0, var3, xlab = "x", ylab = "variance")
par(new=F)
plot(x0, var4, xlab = "x", ylab = "variance")
par(new=F)
plot(x0, var1, xlab = "x", ylab = "variance")
plot(x0, var2, xlab = "x", ylab = "variance")
lines(x0, var2, xlab = "x", ylab = "variance")
lines(x0, var4, xlab = "x", ylab = "variance")
lines(x0, var3, xlab = "x", ylab = "variance")
lines(x0, var4, xlab = "x", ylab = "variance")
lines(x0, var1, xlab = "x", ylab = "variance")
? plot
plot(x0, var1,l, xlab = "x", ylab = "variance")
plot(x0, var1, l, xlab = "x", ylab = "variance")
plot(x0, var1, type ="l", xlab = "x", ylab = "variance")
lines(x0, var2, xlab = "x", ylab = "variance")
lines(x0, var3, xlab = "x", ylab = "variance")
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black")
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var4, xlab = "x", ylab = "variance")
fit4 <- smooth.spline(x, y,df=12)
y04 = predict(fit4,newdata=data.frame(x=x0),se.fit=T)
plot(x0, var4, xlab = "x", ylab = "variance")
var4 <- (y04$se.fit)^2
plot(x0, var4, xlab = "x", ylab = "variance")
fit <- smooth.spline(x, y,df=12)
x0 = seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
llines(fit, lwd = 3, col = "black")
var <- (y0$se.fit)^2
plot(x0, var, xlab = "x", ylab = "variance")
panel.smooth <- function(x,y,...)
{
fit <- smooth.spline(x, y,df=12)
x0 = seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
#lpolygon(c(x0,rev(x0)),c(y0$fit-2*y0$se.fit,rev(y0$fit+2*y0$se.fit)),col="gray",border=F,...)
llines(fit, lwd = 3, col = "black")
var <- (y0$se.fit)^2
plot(x0, var, xlab = "x", ylab = "variance")
str(y0)
y_true <- -2*(x0^2)
bias <- y0$fit - y_true
plot(x0, bias, xlab = "x", ylab = "bias")
MSE <- bias^2 + var
}
xyplot(y ~ x, panel = myPanel)
fit <- smooth.spline(x, y,df=12)
x0 = seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
plot(y ~ x)
xyplot(y ~ x, panel = myPanel)
str(y0)
panel.smooth <- function(x,y,...)
{
fit <- smooth.spline(x, y,df=12)
x0 = seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
#lpolygon(c(x0,rev(x0)),c(y0$fit-2*y0$se.fit,rev(y0$fit+2*y0$se.fit)),col="gray",border=F,...)
llines(fit, lwd = 3, col = "black")
var <- (y0$se.fit)^2
plot(x0, var, xlab = "x", ylab = "variance")
str(y0)
y_true <- -2*(x0^2)
bias <- y0$fit - y_true
plot(x0, bias, xlab = "x", ylab = "bias")
MSE <- bias^2 + var
}
xyplot(y ~ x, panel = myPanel)
y0$se.fit
fit <- smooth.spline(x, y,df=12)
x0 = seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
var <- (y0$se.fit)^2
plot(x0, var, xlab = "x", ylab = "variance")
plot(x0, var, type = "l", xlab = "x", ylab = "variance")
fit <- smooth.spline(x, y,df=12)
x0 = seq(min(x),max(x),len=300)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
lpolygon(c(x0,rev(x0)),c(y0$fit-2*y0$se.fit,rev(y0$fit+2*y0$se.fit)),col="gray",border=F,...)
require(mgcv)
require(mgcv)
myPanel <- function(...)
{
panel.xyplot(...,alpha=.3)
panel.smooth(...)
}
panel.smooth <- function(x,y,...)
{
fit <- gam(y~s(x))
xx <- seq(min(x),max(x),len=101)
yy <- predict(fit,newdata=data.frame(x=xx),se.fit=T)
lpolygon(c(xx,rev(xx)),c(yy$fit-1.96*yy$se.fit,rev(yy$fit+1.96*yy$se.fit)),col=rgb(.6,.6,.6,alpha=.4),border=F,...)
llines(xx,yy$fit,col="black",lwd=2)
}
xyplot(y~x,panel=myPanel)
fit5 <- gam(y~s(x))
xx <- seq(min(x),max(x),len=300)
yy <- predict(fit,newdata=data.frame(x=xx),se.fit=T)
var5 <- (yy$se.fit)^2
yy$se.fit
llines(xx,yy$se.fit,col="black",lwd=2)
yy$fit
yy <- predict(fit,newdata=data.frame(x=xx),se.fit=T)
yy$fit
panel.smooth <- function(x,y,...)
{
fit5 <- gam(y~s(x))
xx <- seq(min(x),max(x),len=300)
yy <- predict(fit,newdata=data.frame(x=xx),se.fit=T)
lpolygon(c(xx,rev(xx)),c(yy$fit-1.96*yy$se.fit,rev(yy$fit+1.96*yy$se.fit)),col=rgb(.6,.6,.6,alpha=.4),border=F,...)
llines(xx,yy$fit,col="black",lwd=2)
llines(xx,yy$se.fit,col="black",lwd=2)
}
trellis.par.set(plot.symbol=list(pch=19))
xyplot(y~x,panel=myPanel)
xyplot(y~x,panel=myPanel)
yy <- predict(fit5,newdata=data.frame(x=xx),se.fit=T)
var5 <- yy$se.fit^2
plot(x0, var5, type = "l", xlab = "x", ylab = "variance")
lines(x0, var5, xlab = "x", ylab = "variance")
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2)
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2))
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var5, xlab = "x", ylab = "variance",col = "green")
legend(0, 40, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
legend(0, 40, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
legend(0, 0, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
legend(0, 10, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
legend(0, -10, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
legend(0, 0.1, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2))
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var5, xlab = "x", ylab = "variance",col = "green")
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),lwd=2)
? legend
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),text.width = strwidth)
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),text.width = strwidth())
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),text.width = 5)
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"),text.width = 1)
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"))
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2))
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var5, xlab = "x", ylab = "variance",col = "green")
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
y_true <- -2*(x0^2)
bias1 <- y01$fit - y_true
bias2 <- y02$fit - y_true
bias3 <- y03$fit - y_true
bias5 <- yy$fit - y_true
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black")
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.2, 0.5))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 0.5))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 2))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.5))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.5))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
legend(-1, 1.5, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.2))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
legend(-1, 1.5, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.2))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
legend(-1, 1, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.2))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
legend(-1, 1.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
plot(x0, bias1^2, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.2))
lines(x0, bias2^2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3^2, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5^2, xlab = "x", ylab = "bias",col = "green")
legend(-1, 1.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
MSE1 <- bias1^2 + var1
MSE2 <- bias2^2 + var2
MSE3 <- bias3^2 + var3
MSE5 <- bias5^2 + var5
plot(x0, MSE1, type ="l", xlab = "x", ylab = "MSE", col = "black", ylim=c(-0.5, 1.2))
plot(x0, MSE1, type ="l", xlab = "x", ylab = "MSE", col = "black", ylim=c(0, 1.2))
plot(x0, MSE1, type ="l", xlab = "x", ylab = "MSE", col = "black", ylim=c(0, 0.4))
lines(x0, MSE2, xlab = "x", ylab = "MSE", col = "blue")
lines(x0, MSE3, xlab = "x", ylab = "MSE", col = "red2")
lines(x0, MSE5, xlab = "x", ylab = "MSE",col = "green")
plot(x0, MSE1, type ="l", xlab = "x", ylab = "MSE", col = "black", ylim=c(0, 0.6))
lines(x0, MSE2, xlab = "x", ylab = "MSE", col = "blue")
lines(x0, MSE3, xlab = "x", ylab = "MSE", col = "red2")
plot(x0, MSE1, type ="l", xlab = "x", ylab = "MSE", col = "black", ylim=c(0, 1))
lines(x0, MSE2, xlab = "x", ylab = "MSE", col = "blue")
lines(x0, MSE3, xlab = "x", ylab = "MSE", col = "red2")
lines(x0, MSE5, xlab = "x", ylab = "MSE",col = "green")
legend(-1, 1.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
plot(x0, MSE1, type ="l", xlab = "x", ylab = "MSE", col = "black", ylim=c(0, 1))
lines(x0, MSE2, xlab = "x", ylab = "MSE", col = "blue")
lines(x0, MSE3, xlab = "x", ylab = "MSE", col = "red2")
lines(x0, MSE5, xlab = "x", ylab = "MSE",col = "green")
legend(-1, 1, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1)
library(MASS)
data(mcycle)
mcycleT.spline <- smooth.spline(mcycle$times, mcycle$accel, cv = T)
plot(mcycle)
lines(mcycleT.spline)
mcycle5.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 5)
mcycle5.spline$cv.crit
mcycle10.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 10)
mcycle10.spline$cv.crit
mcycle15.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 15)
mcycle15.spline$cv.crit
plot(mcycle)
lines(mcycle5.spline, col = "blue")
lines(mcycle10.spline, col = "red2")
lines(mcycle15.spline, col ="black")
legend(40, -40, legend=c("df = 5", "df = 10", "df = 15"),
col=c("blue", "red2", "black"),lwd=1)
? legend
mcycle5.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 5)
mcycle5.spline$cv.crit
mcycle10.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 10)
mcycle10.spline$cv.crit
mcycle15.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 15)
mcycle15.spline$cv.crit
plot(mcycle)
lines(mcycle5.spline, col = "blue")
lines(mcycle10.spline, col = "red2")
lines(mcycle15.spline, col ="black")
legend(40, -40, legend=c("df = 5", "df = 10", "df = 15"),
col=c("blue", "red2", "black"),lwd=1, box.col = "white")
admit = read.table("admit.txt",header=T)
attach(admit)
library(xtable)
install.packages("xtable")
library(xtable)
model_logit = glm(admit ~ . , family = binomial(link='logit'), data=admit)
require(nnet)
model_logit2 <- multinom(admit~.,data=admit)
summary(model_logit)
summary(model_logit2)
xtable(model_logit)
data(mcycle)
summary(model_logit)
summary(model_logit2)
xtable(model_logit)
install.packages("xtable")
library(xtable)
xtable(model_logit)
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2))
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var5, xlab = "x", ylab = "variance",col = "green")
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1, box.col = "white")
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2))
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var5, xlab = "x", ylab = "variance",col = "green")
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1, box.col = "white", cex=0.5)
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2))
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var5, xlab = "x", ylab = "variance",col = "green")
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1, box.col = "white", cex=0.5, legend=legtext)
plot(x0, var1, type ="l", xlab = "x", ylab = "variance", col = "black", ylim=c(0, 0.2))
lines(x0, var2, xlab = "x", ylab = "variance", col = "blue")
lines(x0, var3, xlab = "x", ylab = "variance", col = "red2")
lines(x0, var5, xlab = "x", ylab = "variance",col = "green")
legend(-1, 0.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1, box.col = "white", cex=0.5)
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.2))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
legend(-1, 1.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1, box.col = "white", cex=0.5)
plot(x0, bias1, type ="l", xlab = "x", ylab = "bias", col = "black", ylim=c(-0.5, 1.2))
lines(x0, bias2, xlab = "x", ylab = "bias", col = "blue")
lines(x0, bias3, xlab = "x", ylab = "bias", col = "red2")
lines(x0, bias5, xlab = "x", ylab = "bias",col = "green")
legend(-1, 1.2, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1, box.col = "white", cex=1)
plot(x0, MSE1, type ="l", xlab = "x", ylab = "MSE", col = "black", ylim=c(0, 1))
lines(x0, MSE2, xlab = "x", ylab = "MSE", col = "blue")
lines(x0, MSE3, xlab = "x", ylab = "MSE", col = "red2")
lines(x0, MSE5, xlab = "x", ylab = "MSE",col = "green")
legend(-1, 1, legend=c("Second-order polynomial", "Cubic spline", "Natural cubic spline", "Smoothing spline"),
col=c("black", "blue", "red2", "green"), lwd=1, box.col = "white", cex=0.5)
fit5$degree
fit5$df
fit5
fit6<- smooth.spline(x, y, cv=T)
fit6
knots=quantile(x,c(1/3,2/3))
fit = lm(y~ns(x,knots=knots))
fit
fit = lm(y~ns(x,df=5))
fit
panel.smooth <- function(x,y,...)
{
knots=quantile(x,c(1/3,2/3))
fit = lm(y~ns(x,knots=knots))
x0 = seq(min(x),max(x),len=300)
llines(x0,predict(fit,data.frame(x=x0)),col="black")
lsegments(x0=min(x),y0=min(y),x1=min(x),y1=max(y),col="black",lty=2)
lsegments(x0=knots[1],y0=min(y),x1=knots[1],y1=max(y),col="black",lty=2)
lsegments(x0=knots[2],y0=min(y),x1=knots[2],y1=max(y),col="black",lty=2)
lsegments(x0=max(x),y0=min(y),x1=max(x),y1=max(y),col="black",lty=2)
}
xyplot(y~x, panel= myPanel)
panel.smooth <- function(x,y,...)
{
x0 = seq(min(x),max(x),len=101)
y0 = predict(fit,newdata=data.frame(x=x0),se.fit=T)
#lpolygon(c(x0,rev(x0)),c(y0$fit-2*y0$se.fit,rev(y0$fit+2*y0$se.fit)),col="gray",border=F,...)
llines(x0,predict(fit,data.frame(x=x0)),col="black")
}
xyplot(y~x, panel = myPanel)
panel.smooth <- function(x,y,...)
{
knots=quantile(x,c(1/3,2/3))
fit = lm(y~ns(x,knots=knots))
x0 = seq(min(x),max(x),len=300)
llines(x0,predict(fit,data.frame(x=x0)),col="black")
#lsegments(x0=min(x),y0=min(y),x1=min(x),y1=max(y),col="black",lty=2)
lsegments(x0=knots[1],y0=min(y),x1=knots[1],y1=max(y),col="black",lty=2)
lsegments(x0=knots[2],y0=min(y),x1=knots[2],y1=max(y),col="black",lty=2)
#lsegments(x0=max(x),y0=min(y),x1=max(x),y1=max(y),col="black",lty=2)
}
xyplot(y~x, panel= myPanel)
panel.smooth <- function(x,y,...)
{
knots=quantile(x,c(1/3,2/3))
fit = lm(y~ns(x,knots=knots))
x0 = seq(min(x),max(x),len=300)
llines(x0,predict(fit,data.frame(x=x0)),col="black")
#lsegments(x0=min(x),y0=min(y),x1=min(x),y1=max(y),col="black",lty=2)
#lsegments(x0=knots[1],y0=min(y),x1=knots[1],y1=max(y),col="black",lty=2)
#lsegments(x0=knots[2],y0=min(y),x1=knots[2],y1=max(y),col="black",lty=2)
#lsegments(x0=max(x),y0=min(y),x1=max(x),y1=max(y),col="black",lty=2)
}
xyplot(y~x, panel= myPanel)
mcycleT.spline <- smooth.spline(mcycle$times, mcycle$accel, cv = T)
mcycle.spline <- smooth.spline(mcycle$times, mcycle$accel, cv = T)
mcycle.spline
mcycle5.spline
mcycle10.spline
mcycle15.spline
? glm
summary(model_logit)
mcycle5cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 5, cv = T)
mcycle5cv.spline
mcycle10cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 10, cv = T)
mcycle10cv.spline
mcycle15cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 15, cv = T)
mcycle15.spline
mcycle15cv.spline
mcycle20cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 20, cv = T)
mcycle20cv.spline
mcycle20cv.spline$cv.crit
? seq
mcycle5cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = seq(5, 20, 0.5), cv = T)
mcycle15cv.spline$cv.crit
mcycle5cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 5, cv = T)
mcycle15cv.spline$cv.crit
? for
? for()
PRESS <- 0
for(i in 1:31){
mcyclecv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 5+0.5*(i-1), cv = T)
PRESS[i] <- mcyclecv.splinecv.crit
}
PRESS
PRESS <- 0
for(i in 1:31)
{
mcyclecv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 5+0.5*(i-1), cv = T)
PRESS[i] <- mcyclecv.spline$cv.crit
}
PRESS
? plot
plot (seq(5, 20, 0.5), PRESS)
min(PRESS)
5+0.5*(17-1)
mcycle13cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 13, cv = T)
mcycle13cv.spline
plot (seq(5, 20, 0.5), PRESS, xlab = "df", ylab = "PRESS")
lines (seq(5, 20, 0.5), PRESS, xlab = "df", ylab = "PRESS")
mcycle5cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 5, cv = T)
mcycle10cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 10, cv = T)
mcycle15cv.spline <- smooth.spline(mcycle$times, mcycle$accel, df = 15, cv = T)
plot(mcycle)
lines(mcycle5cv.spline, col = "blue")
lines(mcycle10cv.spline, col = "red2")
lines(mcycle15cv.spline, col ="black")
fit1 <- lm(y ~ x + I(x^2))
fit1
fit2
fit3
fit5
summary(fit1)
setwd("E:/Dropbox/STAT862/Unit4")
attach(SAheart)
SAheart<-read.table('SAheart.txt',header=T)
attach(SAheart)
model_logit = glm(chd ~ . , family = binomial(link='logit'), data=SAheart)
summary(model_logit)
model_logit$coef
model_logit$fit
as.numeric(model_logit$fit>0.5)
save.image("E:/Dropbox/STAT862/Assign2/Data2.RData")
