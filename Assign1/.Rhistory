x <- 4
class(x)
x <- c(4, T)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
hw1_data <- read.csv(hw1_data, header = T)
setwd("~/Dropbox/coursera_R programming")
hw1_data <- read.csv(hw1_data, header = T)
hw1_data <- read.csv("hw1_data", header = T)
hw1_data <- read.csv("hw1_data.csv", header = T)
names(hw1_data)
hw1_data(1:2,)
hw1_data[1:2,]
nrow(hw1_data)
hw1_data[152:153,]
hw1_data[47,]
d<- hw1_data$Ozone
length(d)
d2 <- d[!is.na(d)]
length(d2)
length(d)-length(d2)
mean(d2)
d3 <- hw1_data[hw1_data$Ozone>31]
d3 <- hw1_data[hw1_data$Ozone>31,]
d3 <- hw1_data[(hw1_data$Ozone>31)*(hw1_data$Temp>90),]
mean(d3$Solar.R)
mean(d3$Solar.R, na.rm = T)
d4 <- hw1_data[(hw1_data$Month=6),]
mean(d4$Temp, na.rm = T)
View(d4)
View(hw1_data)
View(d4)
mean(hw1_data$Temp, na.rm = T)
hw1_data <- read.csv("hw1_data.csv", header = T)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
install.packages("installr")
---
---
title: "Untitled"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## GitHub Documents
This is an R Markdown format used for publishing markdown documents to GitHub. When you click the **Knit** button all R code chunks are run and a markdown file (.md) suitable for publishing to GitHub is generated.
## Including Code
You can include R code in the document as follows:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
getwd()
setwd("~/Dropbox/Data Science/CV_SI")
setwd("~/github/STAT862/Assign1")
library(leaps)
library(xtable)
library(lasso2)
Grocery <- read.table("Grocery.txt", header= F)
colnames(Grocery) <- c("Y","X1","X2","X3")
pairs(Grocery, labels = c("Y", "X1", "X2", "X3"), main = "")
fit = lm(Grocery$Y~.,data=Grocery)
summary(fit)
anova(fit)
leaps=regsubsets(Y~X1+X2+X3, data=Grocery,nbest=10)
xtable(anova(fit))
anova(fit)
leaps=regsubsets(Y~X1+X2+X3, data=Grocery,nbest=10)
par(mfrow=c(2,2))
plot(leaps,scale="r2")
leaps=regsubsets(Y~X1+X2+X3, data=Grocery,nbest=10)
par(mfrow=c(2,2))
plot(leaps,scale="r2")
plot(leaps,scale="adjr2")
plot(leaps,scale="Cp")
plot(leaps,scale="bic")
pdf("bestsubset_leaps.pdf")
par(mfrow=c(2,2))
plot(leaps,scale="r2")
plot(leaps,scale="adjr2")
plot(leaps,scale="Cp")
plot(leaps,scale="bic")
dev.off()
subset<-leaps(x=Grocery[,2:4],y=Grocery[,1])
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
subset<-leaps(x=Grocery[,2:4],y=Grocery[,1])
plot(x=subset$size,y=subset$Cp,xlab='size',ylab='Cp')
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,4), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,3), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,3), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,3))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
reg.summary=summary(leaps)
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,4), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,3), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,3), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,3))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
summary(leaps)
reg.summary=summary(leaps)
### the residual sum of squares of the top 10 models
reg.summary$rss
### the R^2 of the top 10 models
reg.summary$rsq
### the adjusted R^2 of the top 10 models
reg.summary$adjr2
### the Cp of the top 10 models
reg.summary$cp
par(mfrow=c(2,2))
plot(reg.summary$rss, xlab="Number of Predictors", ylab="Residual Sum of Squares", type="l", xlim=c(0,4), ylim=c(min(reg.summary$rss), max(reg.summary$rss)))
points(which.min(reg.summary$rss), reg.summary$rss[which.min(reg.summary$rss)], cex=2, pch=20, col="red")
plot(reg.summary$cp, xlab="Number of Predictors", ylab="Cp", type="l", xlim=c(0,3), ylim=c(min(reg.summary$cp),max(reg.summary$cp)))
points(which.min(reg.summary$cp), reg.summary$cp[which.min(reg.summary$cp)], cex=2, pch=20, col="red")
plot(reg.summary$adjr2, xlab="Number of Predictors", ylab="Adjusted R Square", type="l", xlim=c(0,3), ylim=c(0,1))
points(which.max(reg.summary$adjr2),reg.summary$adjr2[which.max(reg.summary$adjr2)], cex=2, pch=20, col="red")
plot(reg.summary$bic, xlab="Number of Predictors", ylab="BIC", type="l", xlim=c(0,3))
points(which.min(reg.summary$bic),reg.summary$bic[which.min(reg.summary$bic)], cex=2, pch=20, col="red")
### full model
Z1 <- Grocery$X1*Grocery$X2
Z2 <- Grocery$X1*Grocery$X3
Z3 <- Grocery$X2*Grocery$X3
n <- nrow(Grocery)
Z4 <- rnorm(n, mean = 30, sd = 30)
Z5 <- rnorm(n, mean = 7, sd = 1)
Grocery2 <- cbind(Grocery, Z1, Z2, Z3, Z4, Z5)
X = as.matrix(Grocery2[,2:9])
y = Grocery2[,1]
install.packages("lars")
library(lars)
fit.lars = lars(X,y, type="lasso",trace=TRUE)
plot(fit.lars)
Z1 <- Grocery$X1*Grocery$X2
Z2 <- Grocery$X1*Grocery$X3
Z3 <- Grocery$X2*Grocery$X3
Grocery <- read.table("Grocery.txt", header= F)
colnames(Grocery) <- c("Y","X1","X2","X3")
Z1 <- Grocery$X1*Grocery$X2
Z2 <- Grocery$X1*Grocery$X3
Z3 <- Grocery$X2*Grocery$X3
n <- nrow(Grocery)
Z4 <- rnorm(n, mean = 30, sd = 30)
Z5 <- rnorm(n, mean = 7, sd = 1)
Grocery2 <- cbind(Grocery, Z1, Z2, Z3, Z4, Z5)
X = as.matrix(Grocery2[,2:9])
y = Grocery2[,1]
library(lars)
fit.lars = lars(X,y, type="lasso",trace=TRUE)
plot(fit.lars)
plot(fit.lars)
